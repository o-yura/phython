# Задание - 1
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь),
# Есть условие, не отображать людей получающих более зарплату 500000, как именно
#  выполнить условие решать вам, можете не писать в файл
# можете не выводить, подумайте какой способ будет наиболее правильным и оптимальным,
#  если скажем эти файлы потом придется передавать.
# Так же при выводе имя должно быть полностью в верхнем регистре!
# Подумайте вспоминая урок, как это можно сделать максимально кратко, используя возможности языка Python.

names = ['Анна', 'Петр', 'Елена', 'Андрей', 'Екатерина', 'Наталья', 'Игорь']
money = [1000, 1200, 2500, 200, 6500, 600000, 5000]

file_gross = '/tmp/salary.txt'
file_clear = '/tmp/salary2.txt'


# универсальная функция создания файлов
def create_file(type, filename, **kwargs):
    file = open(filename, 'w')

    if type == 'gross':
        file.write('Ведомость зарплат до налогов\n\n')
    elif type == 'clear':
        file.write('Ведомость зарплат на руки\n\n')

    for name, salary in kwargs.items():
        file.write('{} - {}\n'.format(name.upper(), salary))

    file.close


# первое условие - запись в файл зарплат

a1_dict = dict(zip(names, money))
a1_dict = dict(filter(lambda x: x[1] < 500000, a1_dict.items()))

create_file('gross', file_gross, **a1_dict)

# второе условие - чтение из файла
names_f = []
money_f = []

with open(file_gross) as file:
    for line in file:
        if line.count('-'):
            name, size = line.split(' - ')
            names_f.append(name)
            money_f.append(int(size))

# третье условие - запись в файл зарплат с вычетом налогов
money_f = list(map(lambda x_f: x_f * 0.87, money_f))
a1_dict_f = dict(zip(names_f, money_f))

create_file('clear', file_clear, **a1_dict_f)
